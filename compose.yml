services:

  vectordb:
    # https://hub.docker.com/r/qdrant/qdrant/tags
    image: docker.io/qdrant/qdrant:v1.13.4
    # image: qdrant/qdrant:v1.9.2-unprivileged # Unprivileged don't work when mounting a volume
    # container_name: vectordb
    restart: unless-stopped
    volumes:
      - ./data/qdrant:/qdrant/storage
      # - ./qdrant_config.yml:/qdrant/config/production.yaml
    environment:
      - QDRANT__TELEMETRY_DISABLED=true
      - QDRANT_ALLOW_RECOVERY_MODE=true
    # command: ./qdrant --config-path /qdrant/config/production.yaml

  api:
    build: .
    # container_name: api
    restart: unless-stopped
    depends_on:
      - vectordb
    ports:
      - 443:80
    environment:
      - VECTORDB_URL=http://vectordb:6334/
      # NOTE: dirty hack to fix a bug with podman internal network on prod server
      # - VECTORDB_URL=http://10.89.1.2:6334/
    volumes:
      - ./data/fastembed_cache:/tmp/fastembed_cache
      - ./data/logs:/logs
      - ./data/embeddings:/app/data/embeddings
      - ./src:/app/src
    env_file:
      - .env
    logging:
      driver: k8s-file
      options:
        path: /logs/expasygpt_podman.log
        max_size: 10mb
        rotate: 10

  # mcp-server:
  #   build: ./src/expasy-mcp
  #   restart: unless-stopped
  #   depends_on:
  #     - vectordb
  #   ports:
  #     - 8888:8888
  #   environment:
  #     - VECTORDB_HOST=vectordb
  #     # NOTE: dirty hack to fix a bug with podman internal network on prod server
  #     # - VECTORDB_HOST=10.89.1.2
  #   volumes:
  #     - ./src/expasy-mcp/src:/app/src
  #     - ./data/fastembed_cache:/tmp/fastembed_cache

  # langgraph-redis:
  #   image: redis:6
  #   restart: unless-stopped
  #   healthcheck:
  #     test: redis-cli ping
  #     interval: 10s
  #     timeout: 1s
  #     retries: 5

  # langgraph-postgres:
  #   image: postgres:16
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_DB: postgres
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #   volumes:
  #     - ./data/langgraph-postgres:/var/lib/postgresql/data
  #   healthcheck:
  #     test: pg_isready -U postgres
  #     start_period: 10s
  #     timeout: 1s
  #     retries: 5
  #     interval: 10s

  # langgraph-api:
  #   # image: ${IMAGE_NAME}
  #   # NOTE: build the image locally first
  #   image: langgraph-expasy-agent
  #   # ports:
  #   #   - "8123:8000"
  #   depends_on:
  #     langgraph-redis:
  #       condition: service_healthy
  #     langgraph-postgres:
  #       condition: service_healthy
  #     vectordb:
  #       condition: service_healthy
  #   restart: unless-stopped
  #   env_file:
  #     - .env
  #   environment:
  #     REDIS_URI: redis://langgraph-redis:6379
  #     LANGCHAIN_TRACING_V2: false
  #     POSTGRES_URI: postgres://postgres:postgres@langgraph-postgres:5432/postgres?sslmode=disable


# NOTE: some podman commands for debugging issues with podman compose networking
# podman-compose down && podman network prune -f
# podman exec -it sparql-llm_api_1 bash -c "apt-get update && apt-get install -y telnet && telnet vectordb 6334"
# < /dev/tcp/vectordb/6334
# podman exec -it api bash -c "< /dev/tcp/vectordb/6334"
